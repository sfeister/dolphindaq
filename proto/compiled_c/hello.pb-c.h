/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: hello.proto */

#ifndef PROTOBUF_C_hello_2eproto__INCLUDED
#define PROTOBUF_C_hello_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Dolphindaq__Hello Dolphindaq__Hello;


/* --- enums --- */

typedef enum _Dolphindaq__Hello__DeviceType {
  DOLPHINDAQ__HELLO__DEVICE_TYPE__OTHER = 0,
  DOLPHINDAQ__HELLO__DEVICE_TYPE__DIODE = 1,
  DOLPHINDAQ__HELLO__DEVICE_TYPE__LINECAM = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOLPHINDAQ__HELLO__DEVICE_TYPE)
} Dolphindaq__Hello__DeviceType;

/* --- messages --- */

/*
 * Message sent by every device on first connection (and every re-connection) with the server
 * Identifies the device uniquely and tells server which protocol buffers with which to parse messages
 */
struct  _Dolphindaq__Hello
{
  ProtobufCMessage base;
  /*
   * Unique device name string
   */
  char *unique_name;
  /*
   * Unique device ID
   */
  int64_t unique_id;
  Dolphindaq__Hello__DeviceType device_type;
};
#define DOLPHINDAQ__HELLO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dolphindaq__hello__descriptor) \
    , (char *)protobuf_c_empty_string, 0, DOLPHINDAQ__HELLO__DEVICE_TYPE__OTHER }


/* Dolphindaq__Hello methods */
void   dolphindaq__hello__init
                     (Dolphindaq__Hello         *message);
size_t dolphindaq__hello__get_packed_size
                     (const Dolphindaq__Hello   *message);
size_t dolphindaq__hello__pack
                     (const Dolphindaq__Hello   *message,
                      uint8_t             *out);
size_t dolphindaq__hello__pack_to_buffer
                     (const Dolphindaq__Hello   *message,
                      ProtobufCBuffer     *buffer);
Dolphindaq__Hello *
       dolphindaq__hello__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dolphindaq__hello__free_unpacked
                     (Dolphindaq__Hello *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Dolphindaq__Hello_Closure)
                 (const Dolphindaq__Hello *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor dolphindaq__hello__descriptor;
extern const ProtobufCEnumDescriptor    dolphindaq__hello__device_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_hello_2eproto__INCLUDED */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rosie.proto

#ifndef PROTOBUF_INCLUDED_rosie_2eproto
#define PROTOBUF_INCLUDED_rosie_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_rosie_2eproto 

namespace protobuf_rosie_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_rosie_2eproto
namespace dolphindaq {
namespace rosie {
class Data;
class DataDefaultTypeInternal;
extern DataDefaultTypeInternal _Data_default_instance_;
class Metrics;
class MetricsDefaultTypeInternal;
extern MetricsDefaultTypeInternal _Metrics_default_instance_;
class Settings;
class SettingsDefaultTypeInternal;
extern SettingsDefaultTypeInternal _Settings_default_instance_;
}  // namespace rosie
}  // namespace dolphindaq
namespace google {
namespace protobuf {
template<> ::dolphindaq::rosie::Data* Arena::CreateMaybeMessage<::dolphindaq::rosie::Data>(Arena*);
template<> ::dolphindaq::rosie::Metrics* Arena::CreateMaybeMessage<::dolphindaq::rosie::Metrics>(Arena*);
template<> ::dolphindaq::rosie::Settings* Arena::CreateMaybeMessage<::dolphindaq::rosie::Settings>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dolphindaq {
namespace rosie {

// ===================================================================

class Settings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dolphindaq.rosie.Settings) */ {
 public:
  Settings();
  virtual ~Settings();

  Settings(const Settings& from);

  inline Settings& operator=(const Settings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Settings(Settings&& from) noexcept
    : Settings() {
    *this = ::std::move(from);
  }

  inline Settings& operator=(Settings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Settings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Settings* internal_default_instance() {
    return reinterpret_cast<const Settings*>(
               &_Settings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Settings* other);
  friend void swap(Settings& a, Settings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Settings* New() const final {
    return CreateMaybeMessage<Settings>(NULL);
  }

  Settings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Settings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Settings& from);
  void MergeFrom(const Settings& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Settings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.Timestamp start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_start_time() const;
  public:
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // optional uint64 start_shot_num = 1;
  bool has_start_shot_num() const;
  void clear_start_shot_num();
  static const int kStartShotNumFieldNumber = 1;
  ::google::protobuf::uint64 start_shot_num() const;
  void set_start_shot_num(::google::protobuf::uint64 value);

  // optional uint32 metrics_batch_size = 3;
  bool has_metrics_batch_size() const;
  void clear_metrics_batch_size();
  static const int kMetricsBatchSizeFieldNumber = 3;
  ::google::protobuf::uint32 metrics_batch_size() const;
  void set_metrics_batch_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dolphindaq.rosie.Settings)
 private:
  void set_has_start_shot_num();
  void clear_has_start_shot_num();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_metrics_batch_size();
  void clear_has_metrics_batch_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::uint64 start_shot_num_;
  ::google::protobuf::uint32 metrics_batch_size_;
  friend struct ::protobuf_rosie_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dolphindaq.rosie.Data) */ {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Data(Data&& from) noexcept
    : Data() {
    *this = ::std::move(from);
  }

  inline Data& operator=(Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Data* internal_default_instance() {
    return reinterpret_cast<const Data*>(
               &_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Data* other);
  friend void swap(Data& a, Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Data* New() const final {
    return CreateMaybeMessage<Data>(NULL);
  }

  Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dolphindaq.rosie.Metrics metrics = 1;
  bool has_metrics() const;
  void clear_metrics();
  static const int kMetricsFieldNumber = 1;
  private:
  const ::dolphindaq::rosie::Metrics& _internal_metrics() const;
  public:
  const ::dolphindaq::rosie::Metrics& metrics() const;
  ::dolphindaq::rosie::Metrics* release_metrics();
  ::dolphindaq::rosie::Metrics* mutable_metrics();
  void set_allocated_metrics(::dolphindaq::rosie::Metrics* metrics);

  // @@protoc_insertion_point(class_scope:dolphindaq.rosie.Data)
 private:
  void set_has_metrics();
  void clear_has_metrics();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::dolphindaq::rosie::Metrics* metrics_;
  friend struct ::protobuf_rosie_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Metrics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dolphindaq.rosie.Metrics) */ {
 public:
  Metrics();
  virtual ~Metrics();

  Metrics(const Metrics& from);

  inline Metrics& operator=(const Metrics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Metrics(Metrics&& from) noexcept
    : Metrics() {
    *this = ::std::move(from);
  }

  inline Metrics& operator=(Metrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Metrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Metrics* internal_default_instance() {
    return reinterpret_cast<const Metrics*>(
               &_Metrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Metrics* other);
  friend void swap(Metrics& a, Metrics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Metrics* New() const final {
    return CreateMaybeMessage<Metrics>(NULL);
  }

  Metrics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Metrics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Metrics& from);
  void MergeFrom(const Metrics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Metrics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 shot_num = 1;
  int shot_num_size() const;
  void clear_shot_num();
  static const int kShotNumFieldNumber = 1;
  ::google::protobuf::uint64 shot_num(int index) const;
  void set_shot_num(int index, ::google::protobuf::uint64 value);
  void add_shot_num(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      shot_num() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_shot_num();

  // repeated .google.protobuf.Timestamp shot_time = 2;
  int shot_time_size() const;
  void clear_shot_time();
  static const int kShotTimeFieldNumber = 2;
  ::google::protobuf::Timestamp* mutable_shot_time(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Timestamp >*
      mutable_shot_time();
  const ::google::protobuf::Timestamp& shot_time(int index) const;
  ::google::protobuf::Timestamp* add_shot_time();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Timestamp >&
      shot_time() const;

  // repeated int64 shot_time_seconds = 3;
  int shot_time_seconds_size() const;
  void clear_shot_time_seconds();
  static const int kShotTimeSecondsFieldNumber = 3;
  ::google::protobuf::int64 shot_time_seconds(int index) const;
  void set_shot_time_seconds(int index, ::google::protobuf::int64 value);
  void add_shot_time_seconds(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      shot_time_seconds() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_shot_time_seconds();

  // repeated int32 shot_time_nanos = 4;
  int shot_time_nanos_size() const;
  void clear_shot_time_nanos();
  static const int kShotTimeNanosFieldNumber = 4;
  ::google::protobuf::int32 shot_time_nanos(int index) const;
  void set_shot_time_nanos(int index, ::google::protobuf::int32 value);
  void add_shot_time_nanos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shot_time_nanos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shot_time_nanos();

  // repeated uint64 shot_time_alt_nanos = 5;
  int shot_time_alt_nanos_size() const;
  void clear_shot_time_alt_nanos();
  static const int kShotTimeAltNanosFieldNumber = 5;
  ::google::protobuf::uint64 shot_time_alt_nanos(int index) const;
  void set_shot_time_alt_nanos(int index, ::google::protobuf::uint64 value);
  void add_shot_time_alt_nanos(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      shot_time_alt_nanos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_shot_time_alt_nanos();

  // @@protoc_insertion_point(class_scope:dolphindaq.rosie.Metrics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > shot_num_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Timestamp > shot_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > shot_time_seconds_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shot_time_nanos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > shot_time_alt_nanos_;
  friend struct ::protobuf_rosie_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Settings

// optional uint64 start_shot_num = 1;
inline bool Settings::has_start_shot_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Settings::set_has_start_shot_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Settings::clear_has_start_shot_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Settings::clear_start_shot_num() {
  start_shot_num_ = GOOGLE_ULONGLONG(0);
  clear_has_start_shot_num();
}
inline ::google::protobuf::uint64 Settings::start_shot_num() const {
  // @@protoc_insertion_point(field_get:dolphindaq.rosie.Settings.start_shot_num)
  return start_shot_num_;
}
inline void Settings::set_start_shot_num(::google::protobuf::uint64 value) {
  set_has_start_shot_num();
  start_shot_num_ = value;
  // @@protoc_insertion_point(field_set:dolphindaq.rosie.Settings.start_shot_num)
}

// optional .google.protobuf.Timestamp start_time = 2;
inline bool Settings::has_start_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Settings::set_has_start_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Settings::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::google::protobuf::Timestamp& Settings::_internal_start_time() const {
  return *start_time_;
}
inline const ::google::protobuf::Timestamp& Settings::start_time() const {
  const ::google::protobuf::Timestamp* p = start_time_;
  // @@protoc_insertion_point(field_get:dolphindaq.rosie.Settings.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Settings::release_start_time() {
  // @@protoc_insertion_point(field_release:dolphindaq.rosie.Settings.start_time)
  clear_has_start_time();
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Settings::mutable_start_time() {
  set_has_start_time();
  if (start_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    start_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dolphindaq.rosie.Settings.start_time)
  return start_time_;
}
inline void Settings::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    set_has_start_time();
  } else {
    clear_has_start_time();
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:dolphindaq.rosie.Settings.start_time)
}

// optional uint32 metrics_batch_size = 3;
inline bool Settings::has_metrics_batch_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Settings::set_has_metrics_batch_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Settings::clear_has_metrics_batch_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Settings::clear_metrics_batch_size() {
  metrics_batch_size_ = 0u;
  clear_has_metrics_batch_size();
}
inline ::google::protobuf::uint32 Settings::metrics_batch_size() const {
  // @@protoc_insertion_point(field_get:dolphindaq.rosie.Settings.metrics_batch_size)
  return metrics_batch_size_;
}
inline void Settings::set_metrics_batch_size(::google::protobuf::uint32 value) {
  set_has_metrics_batch_size();
  metrics_batch_size_ = value;
  // @@protoc_insertion_point(field_set:dolphindaq.rosie.Settings.metrics_batch_size)
}

// -------------------------------------------------------------------

// Data

// optional .dolphindaq.rosie.Metrics metrics = 1;
inline bool Data::has_metrics() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Data::set_has_metrics() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Data::clear_has_metrics() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Data::clear_metrics() {
  if (metrics_ != NULL) metrics_->Clear();
  clear_has_metrics();
}
inline const ::dolphindaq::rosie::Metrics& Data::_internal_metrics() const {
  return *metrics_;
}
inline const ::dolphindaq::rosie::Metrics& Data::metrics() const {
  const ::dolphindaq::rosie::Metrics* p = metrics_;
  // @@protoc_insertion_point(field_get:dolphindaq.rosie.Data.metrics)
  return p != NULL ? *p : *reinterpret_cast<const ::dolphindaq::rosie::Metrics*>(
      &::dolphindaq::rosie::_Metrics_default_instance_);
}
inline ::dolphindaq::rosie::Metrics* Data::release_metrics() {
  // @@protoc_insertion_point(field_release:dolphindaq.rosie.Data.metrics)
  clear_has_metrics();
  ::dolphindaq::rosie::Metrics* temp = metrics_;
  metrics_ = NULL;
  return temp;
}
inline ::dolphindaq::rosie::Metrics* Data::mutable_metrics() {
  set_has_metrics();
  if (metrics_ == NULL) {
    auto* p = CreateMaybeMessage<::dolphindaq::rosie::Metrics>(GetArenaNoVirtual());
    metrics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dolphindaq.rosie.Data.metrics)
  return metrics_;
}
inline void Data::set_allocated_metrics(::dolphindaq::rosie::Metrics* metrics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete metrics_;
  }
  if (metrics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      metrics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metrics, submessage_arena);
    }
    set_has_metrics();
  } else {
    clear_has_metrics();
  }
  metrics_ = metrics;
  // @@protoc_insertion_point(field_set_allocated:dolphindaq.rosie.Data.metrics)
}

// -------------------------------------------------------------------

// Metrics

// repeated uint64 shot_num = 1;
inline int Metrics::shot_num_size() const {
  return shot_num_.size();
}
inline void Metrics::clear_shot_num() {
  shot_num_.Clear();
}
inline ::google::protobuf::uint64 Metrics::shot_num(int index) const {
  // @@protoc_insertion_point(field_get:dolphindaq.rosie.Metrics.shot_num)
  return shot_num_.Get(index);
}
inline void Metrics::set_shot_num(int index, ::google::protobuf::uint64 value) {
  shot_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:dolphindaq.rosie.Metrics.shot_num)
}
inline void Metrics::add_shot_num(::google::protobuf::uint64 value) {
  shot_num_.Add(value);
  // @@protoc_insertion_point(field_add:dolphindaq.rosie.Metrics.shot_num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Metrics::shot_num() const {
  // @@protoc_insertion_point(field_list:dolphindaq.rosie.Metrics.shot_num)
  return shot_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Metrics::mutable_shot_num() {
  // @@protoc_insertion_point(field_mutable_list:dolphindaq.rosie.Metrics.shot_num)
  return &shot_num_;
}

// repeated .google.protobuf.Timestamp shot_time = 2;
inline int Metrics::shot_time_size() const {
  return shot_time_.size();
}
inline ::google::protobuf::Timestamp* Metrics::mutable_shot_time(int index) {
  // @@protoc_insertion_point(field_mutable:dolphindaq.rosie.Metrics.shot_time)
  return shot_time_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Timestamp >*
Metrics::mutable_shot_time() {
  // @@protoc_insertion_point(field_mutable_list:dolphindaq.rosie.Metrics.shot_time)
  return &shot_time_;
}
inline const ::google::protobuf::Timestamp& Metrics::shot_time(int index) const {
  // @@protoc_insertion_point(field_get:dolphindaq.rosie.Metrics.shot_time)
  return shot_time_.Get(index);
}
inline ::google::protobuf::Timestamp* Metrics::add_shot_time() {
  // @@protoc_insertion_point(field_add:dolphindaq.rosie.Metrics.shot_time)
  return shot_time_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Timestamp >&
Metrics::shot_time() const {
  // @@protoc_insertion_point(field_list:dolphindaq.rosie.Metrics.shot_time)
  return shot_time_;
}

// repeated int64 shot_time_seconds = 3;
inline int Metrics::shot_time_seconds_size() const {
  return shot_time_seconds_.size();
}
inline void Metrics::clear_shot_time_seconds() {
  shot_time_seconds_.Clear();
}
inline ::google::protobuf::int64 Metrics::shot_time_seconds(int index) const {
  // @@protoc_insertion_point(field_get:dolphindaq.rosie.Metrics.shot_time_seconds)
  return shot_time_seconds_.Get(index);
}
inline void Metrics::set_shot_time_seconds(int index, ::google::protobuf::int64 value) {
  shot_time_seconds_.Set(index, value);
  // @@protoc_insertion_point(field_set:dolphindaq.rosie.Metrics.shot_time_seconds)
}
inline void Metrics::add_shot_time_seconds(::google::protobuf::int64 value) {
  shot_time_seconds_.Add(value);
  // @@protoc_insertion_point(field_add:dolphindaq.rosie.Metrics.shot_time_seconds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Metrics::shot_time_seconds() const {
  // @@protoc_insertion_point(field_list:dolphindaq.rosie.Metrics.shot_time_seconds)
  return shot_time_seconds_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Metrics::mutable_shot_time_seconds() {
  // @@protoc_insertion_point(field_mutable_list:dolphindaq.rosie.Metrics.shot_time_seconds)
  return &shot_time_seconds_;
}

// repeated int32 shot_time_nanos = 4;
inline int Metrics::shot_time_nanos_size() const {
  return shot_time_nanos_.size();
}
inline void Metrics::clear_shot_time_nanos() {
  shot_time_nanos_.Clear();
}
inline ::google::protobuf::int32 Metrics::shot_time_nanos(int index) const {
  // @@protoc_insertion_point(field_get:dolphindaq.rosie.Metrics.shot_time_nanos)
  return shot_time_nanos_.Get(index);
}
inline void Metrics::set_shot_time_nanos(int index, ::google::protobuf::int32 value) {
  shot_time_nanos_.Set(index, value);
  // @@protoc_insertion_point(field_set:dolphindaq.rosie.Metrics.shot_time_nanos)
}
inline void Metrics::add_shot_time_nanos(::google::protobuf::int32 value) {
  shot_time_nanos_.Add(value);
  // @@protoc_insertion_point(field_add:dolphindaq.rosie.Metrics.shot_time_nanos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Metrics::shot_time_nanos() const {
  // @@protoc_insertion_point(field_list:dolphindaq.rosie.Metrics.shot_time_nanos)
  return shot_time_nanos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Metrics::mutable_shot_time_nanos() {
  // @@protoc_insertion_point(field_mutable_list:dolphindaq.rosie.Metrics.shot_time_nanos)
  return &shot_time_nanos_;
}

// repeated uint64 shot_time_alt_nanos = 5;
inline int Metrics::shot_time_alt_nanos_size() const {
  return shot_time_alt_nanos_.size();
}
inline void Metrics::clear_shot_time_alt_nanos() {
  shot_time_alt_nanos_.Clear();
}
inline ::google::protobuf::uint64 Metrics::shot_time_alt_nanos(int index) const {
  // @@protoc_insertion_point(field_get:dolphindaq.rosie.Metrics.shot_time_alt_nanos)
  return shot_time_alt_nanos_.Get(index);
}
inline void Metrics::set_shot_time_alt_nanos(int index, ::google::protobuf::uint64 value) {
  shot_time_alt_nanos_.Set(index, value);
  // @@protoc_insertion_point(field_set:dolphindaq.rosie.Metrics.shot_time_alt_nanos)
}
inline void Metrics::add_shot_time_alt_nanos(::google::protobuf::uint64 value) {
  shot_time_alt_nanos_.Add(value);
  // @@protoc_insertion_point(field_add:dolphindaq.rosie.Metrics.shot_time_alt_nanos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Metrics::shot_time_alt_nanos() const {
  // @@protoc_insertion_point(field_list:dolphindaq.rosie.Metrics.shot_time_alt_nanos)
  return shot_time_alt_nanos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Metrics::mutable_shot_time_alt_nanos() {
  // @@protoc_insertion_point(field_mutable_list:dolphindaq.rosie.Metrics.shot_time_alt_nanos)
  return &shot_time_alt_nanos_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace rosie
}  // namespace dolphindaq

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_rosie_2eproto

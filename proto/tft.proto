syntax = "proto2";

package dolphindaq.tft; // thin-film display for simulated data image display

import "google/protobuf/timestamp.proto";

// A message containing info on a shot that just happened
// Meant to be sent from the TFT device when it detects a shot
message ShotAlert {
  optional uint64 shot_num = 1; // Shot number (if exposure time is long, then just the earliest shot number is indicated here)
  optional google.protobuf.Timestamp shot_time = 2; // Shot time from a real-time clock (if exposure time is long, then just the earliest shot time is indicated here)
  optional uint64 shot_time_alt_nanos = 3; // Shot time from an alternate time source: a more-precise, but less accurate, system timer (in nanoseconds). Nanoseconds count up from zero and then roll over (at a max value that depends on the timer). Does not match meaning of Google's timestamp.proto. (if exposure time is long, then just the earliest shot time is indicated here)
}

// A single UINT16 image for the Waveshare TFT (using encoding "RGB565", 240x280 screen)
message ImageWaveshare {
  optional uint64 shot_num = 1; // Shot number (if exposure time is long, then just the earliest shot number is indicated here)
  optional google.protobuf.Timestamp shot_time = 2; // Shot time from a real-time clock (if exposure time is long, then just the earliest shot time is indicated here)
  optional uint64 shot_time_alt_nanos = 3; // Shot time from an alternate time source: a more-precise, but less accurate, system timer (in nanoseconds). Nanoseconds count up from zero and then roll over (at a max value that depends on the timer). Does not match meaning of Google's timestamp.proto. (if exposure time is long, then just the earliest shot time is indicated here)
  optional uint32 nx = 4; // Number of pixel values in the image, X dimension (index 1)
  optional uint32 ny = 5; // Number of pixel values in the image, Y dimension (index 0)
  optional bytes vals = 6; // uint16 raw pixel data; same size of image as specified in Image.nx and Image.ny; (encoding UINT16 is not an option in Google protobufs)
}

// A single UINT16 image for the TFT (could be encoding "RGB565" if desired, or raw 16-bit values, 240x320 screen)
message ImageILI {
  optional uint64 shot_num = 1; // Shot number (if exposure time is long, then just the earliest shot number is indicated here)
  optional google.protobuf.Timestamp shot_time = 2; // Shot time from a real-time clock (if exposure time is long, then just the earliest shot time is indicated here)
  optional uint64 shot_time_alt_nanos = 3; // Shot time from an alternate time source: a more-precise, but less accurate, system timer (in nanoseconds). Nanoseconds count up from zero and then roll over (at a max value that depends on the timer). Does not match meaning of Google's timestamp.proto. (if exposure time is long, then just the earliest shot time is indicated here)
  optional uint32 nx = 4; // Number of pixel values in the image, X dimension (index 1)
  optional uint32 ny = 5; // Number of pixel values in the image, Y dimension (index 0)
  optional bytes vals = 6; // uint16 raw pixel data; same size of image as specified in Image.nx and Image.ny; (encoding UINT16 is not an option in Google protobufs)
}
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rosie.proto

#include "rosie.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_rosie_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rosie_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Metrics;
}  // namespace protobuf_rosie_2eproto
namespace dolphindaq {
namespace rosie {
class SettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Settings>
      _instance;
} _Settings_default_instance_;
class DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Data>
      _instance;
} _Data_default_instance_;
class MetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metrics>
      _instance;
} _Metrics_default_instance_;
}  // namespace rosie
}  // namespace dolphindaq
namespace protobuf_rosie_2eproto {
static void InitDefaultsSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dolphindaq::rosie::_Settings_default_instance_;
    new (ptr) ::dolphindaq::rosie::Settings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dolphindaq::rosie::Settings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Settings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSettings}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dolphindaq::rosie::_Data_default_instance_;
    new (ptr) ::dolphindaq::rosie::Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dolphindaq::rosie::Data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsData}, {
      &protobuf_rosie_2eproto::scc_info_Metrics.base,}};

static void InitDefaultsMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dolphindaq::rosie::_Metrics_default_instance_;
    new (ptr) ::dolphindaq::rosie::Metrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dolphindaq::rosie::Metrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Metrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetrics}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Settings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Data.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Metrics.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Settings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Settings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Settings, start_shot_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Settings, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Settings, metrics_batch_size_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Data, metrics_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Metrics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Metrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Metrics, shot_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Metrics, shot_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Metrics, shot_time_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Metrics, shot_time_nanos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dolphindaq::rosie::Metrics, shot_time_alt_nanos_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::dolphindaq::rosie::Settings)},
  { 11, 17, sizeof(::dolphindaq::rosie::Data)},
  { 18, 28, sizeof(::dolphindaq::rosie::Metrics)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dolphindaq::rosie::_Settings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dolphindaq::rosie::_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dolphindaq::rosie::_Metrics_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "rosie.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013rosie.proto\022\020dolphindaq.rosie\032\037google/"
      "protobuf/timestamp.proto\"n\n\010Settings\022\026\n\016"
      "start_shot_num\030\001 \001(\004\022.\n\nstart_time\030\002 \001(\013"
      "2\032.google.protobuf.Timestamp\022\032\n\022metrics_"
      "batch_size\030\003 \001(\r\"2\n\004Data\022*\n\007metrics\030\001 \001("
      "\0132\031.dolphindaq.rosie.Metrics\"\233\001\n\007Metrics"
      "\022\020\n\010shot_num\030\001 \003(\004\022-\n\tshot_time\030\002 \003(\0132\032."
      "google.protobuf.Timestamp\022\031\n\021shot_time_s"
      "econds\030\003 \003(\003\022\027\n\017shot_time_nanos\030\004 \003(\005\022\033\n"
      "\023shot_time_alt_nanos\030\005 \003(\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 386);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rosie.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rosie_2eproto
namespace dolphindaq {
namespace rosie {

// ===================================================================

void Settings::InitAsDefaultInstance() {
  ::dolphindaq::rosie::_Settings_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Settings::clear_start_time() {
  if (start_time_ != NULL) start_time_->Clear();
  clear_has_start_time();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Settings::kStartShotNumFieldNumber;
const int Settings::kStartTimeFieldNumber;
const int Settings::kMetricsBatchSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Settings::Settings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rosie_2eproto::scc_info_Settings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dolphindaq.rosie.Settings)
}
Settings::Settings(const Settings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  ::memcpy(&start_shot_num_, &from.start_shot_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&metrics_batch_size_) -
    reinterpret_cast<char*>(&start_shot_num_)) + sizeof(metrics_batch_size_));
  // @@protoc_insertion_point(copy_constructor:dolphindaq.rosie.Settings)
}

void Settings::SharedCtor() {
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&metrics_batch_size_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(metrics_batch_size_));
}

Settings::~Settings() {
  // @@protoc_insertion_point(destructor:dolphindaq.rosie.Settings)
  SharedDtor();
}

void Settings::SharedDtor() {
  if (this != internal_default_instance()) delete start_time_;
}

void Settings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Settings::descriptor() {
  ::protobuf_rosie_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rosie_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Settings& Settings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rosie_2eproto::scc_info_Settings.base);
  return *internal_default_instance();
}


void Settings::Clear() {
// @@protoc_insertion_point(message_clear_start:dolphindaq.rosie.Settings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(start_time_ != NULL);
    start_time_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&start_shot_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&metrics_batch_size_) -
        reinterpret_cast<char*>(&start_shot_num_)) + sizeof(metrics_batch_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Settings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dolphindaq.rosie.Settings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 start_shot_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_start_shot_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_shot_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 metrics_batch_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_metrics_batch_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &metrics_batch_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dolphindaq.rosie.Settings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dolphindaq.rosie.Settings)
  return false;
#undef DO_
}

void Settings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dolphindaq.rosie.Settings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 start_shot_num = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_shot_num(), output);
  }

  // optional .google.protobuf.Timestamp start_time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_start_time(), output);
  }

  // optional uint32 metrics_batch_size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->metrics_batch_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dolphindaq.rosie.Settings)
}

::google::protobuf::uint8* Settings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dolphindaq.rosie.Settings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 start_shot_num = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_shot_num(), target);
  }

  // optional .google.protobuf.Timestamp start_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_start_time(), deterministic, target);
  }

  // optional uint32 metrics_batch_size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->metrics_batch_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dolphindaq.rosie.Settings)
  return target;
}

size_t Settings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dolphindaq.rosie.Settings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .google.protobuf.Timestamp start_time = 2;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *start_time_);
    }

    // optional uint64 start_shot_num = 1;
    if (has_start_shot_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->start_shot_num());
    }

    // optional uint32 metrics_batch_size = 3;
    if (has_metrics_batch_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->metrics_batch_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Settings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dolphindaq.rosie.Settings)
  GOOGLE_DCHECK_NE(&from, this);
  const Settings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Settings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dolphindaq.rosie.Settings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dolphindaq.rosie.Settings)
    MergeFrom(*source);
  }
}

void Settings::MergeFrom(const Settings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dolphindaq.rosie.Settings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
    }
    if (cached_has_bits & 0x00000002u) {
      start_shot_num_ = from.start_shot_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      metrics_batch_size_ = from.metrics_batch_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Settings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dolphindaq.rosie.Settings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Settings::CopyFrom(const Settings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dolphindaq.rosie.Settings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Settings::IsInitialized() const {
  return true;
}

void Settings::Swap(Settings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Settings::InternalSwap(Settings* other) {
  using std::swap;
  swap(start_time_, other->start_time_);
  swap(start_shot_num_, other->start_shot_num_);
  swap(metrics_batch_size_, other->metrics_batch_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Settings::GetMetadata() const {
  protobuf_rosie_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rosie_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Data::InitAsDefaultInstance() {
  ::dolphindaq::rosie::_Data_default_instance_._instance.get_mutable()->metrics_ = const_cast< ::dolphindaq::rosie::Metrics*>(
      ::dolphindaq::rosie::Metrics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rosie_2eproto::scc_info_Data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dolphindaq.rosie.Data)
}
Data::Data(const Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_metrics()) {
    metrics_ = new ::dolphindaq::rosie::Metrics(*from.metrics_);
  } else {
    metrics_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dolphindaq.rosie.Data)
}

void Data::SharedCtor() {
  metrics_ = NULL;
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:dolphindaq.rosie.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  if (this != internal_default_instance()) delete metrics_;
}

void Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  ::protobuf_rosie_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rosie_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Data& Data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rosie_2eproto::scc_info_Data.base);
  return *internal_default_instance();
}


void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:dolphindaq.rosie.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(metrics_ != NULL);
    metrics_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dolphindaq.rosie.Data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dolphindaq.rosie.Metrics metrics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dolphindaq.rosie.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dolphindaq.rosie.Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dolphindaq.rosie.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .dolphindaq.rosie.Metrics metrics = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_metrics(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dolphindaq.rosie.Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dolphindaq.rosie.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .dolphindaq.rosie.Metrics metrics = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_metrics(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dolphindaq.rosie.Data)
  return target;
}

size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dolphindaq.rosie.Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .dolphindaq.rosie.Metrics metrics = 1;
  if (has_metrics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metrics_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dolphindaq.rosie.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dolphindaq.rosie.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dolphindaq.rosie.Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dolphindaq.rosie.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_metrics()) {
    mutable_metrics()->::dolphindaq::rosie::Metrics::MergeFrom(from.metrics());
  }
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dolphindaq.rosie.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dolphindaq.rosie.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  using std::swap;
  swap(metrics_, other->metrics_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_rosie_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rosie_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Metrics::InitAsDefaultInstance() {
}
void Metrics::clear_shot_time() {
  shot_time_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metrics::kShotNumFieldNumber;
const int Metrics::kShotTimeFieldNumber;
const int Metrics::kShotTimeSecondsFieldNumber;
const int Metrics::kShotTimeNanosFieldNumber;
const int Metrics::kShotTimeAltNanosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metrics::Metrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rosie_2eproto::scc_info_Metrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dolphindaq.rosie.Metrics)
}
Metrics::Metrics(const Metrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      shot_num_(from.shot_num_),
      shot_time_(from.shot_time_),
      shot_time_seconds_(from.shot_time_seconds_),
      shot_time_nanos_(from.shot_time_nanos_),
      shot_time_alt_nanos_(from.shot_time_alt_nanos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dolphindaq.rosie.Metrics)
}

void Metrics::SharedCtor() {
}

Metrics::~Metrics() {
  // @@protoc_insertion_point(destructor:dolphindaq.rosie.Metrics)
  SharedDtor();
}

void Metrics::SharedDtor() {
}

void Metrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Metrics::descriptor() {
  ::protobuf_rosie_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rosie_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metrics& Metrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rosie_2eproto::scc_info_Metrics.base);
  return *internal_default_instance();
}


void Metrics::Clear() {
// @@protoc_insertion_point(message_clear_start:dolphindaq.rosie.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shot_num_.Clear();
  shot_time_.Clear();
  shot_time_seconds_.Clear();
  shot_time_nanos_.Clear();
  shot_time_alt_nanos_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Metrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dolphindaq.rosie.Metrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 shot_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_shot_num())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_shot_num())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Timestamp shot_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shot_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 shot_time_seconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_shot_time_seconds())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_shot_time_seconds())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 shot_time_nanos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_shot_time_nanos())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_shot_time_nanos())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 shot_time_alt_nanos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 40u, input, this->mutable_shot_time_alt_nanos())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_shot_time_alt_nanos())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dolphindaq.rosie.Metrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dolphindaq.rosie.Metrics)
  return false;
#undef DO_
}

void Metrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dolphindaq.rosie.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 shot_num = 1;
  for (int i = 0, n = this->shot_num_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->shot_num(i), output);
  }

  // repeated .google.protobuf.Timestamp shot_time = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shot_time_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->shot_time(static_cast<int>(i)),
      output);
  }

  // repeated int64 shot_time_seconds = 3;
  for (int i = 0, n = this->shot_time_seconds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->shot_time_seconds(i), output);
  }

  // repeated int32 shot_time_nanos = 4;
  for (int i = 0, n = this->shot_time_nanos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->shot_time_nanos(i), output);
  }

  // repeated uint64 shot_time_alt_nanos = 5;
  for (int i = 0, n = this->shot_time_alt_nanos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      5, this->shot_time_alt_nanos(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dolphindaq.rosie.Metrics)
}

::google::protobuf::uint8* Metrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dolphindaq.rosie.Metrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 shot_num = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->shot_num_, target);

  // repeated .google.protobuf.Timestamp shot_time = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shot_time_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->shot_time(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 shot_time_seconds = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(3, this->shot_time_seconds_, target);

  // repeated int32 shot_time_nanos = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->shot_time_nanos_, target);

  // repeated uint64 shot_time_alt_nanos = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(5, this->shot_time_alt_nanos_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dolphindaq.rosie.Metrics)
  return target;
}

size_t Metrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dolphindaq.rosie.Metrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 shot_num = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->shot_num_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->shot_num_size());
    total_size += data_size;
  }

  // repeated .google.protobuf.Timestamp shot_time = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->shot_time_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shot_time(static_cast<int>(i)));
    }
  }

  // repeated int64 shot_time_seconds = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->shot_time_seconds_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->shot_time_seconds_size());
    total_size += data_size;
  }

  // repeated int32 shot_time_nanos = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->shot_time_nanos_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->shot_time_nanos_size());
    total_size += data_size;
  }

  // repeated uint64 shot_time_alt_nanos = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->shot_time_alt_nanos_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->shot_time_alt_nanos_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dolphindaq.rosie.Metrics)
  GOOGLE_DCHECK_NE(&from, this);
  const Metrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dolphindaq.rosie.Metrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dolphindaq.rosie.Metrics)
    MergeFrom(*source);
  }
}

void Metrics::MergeFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dolphindaq.rosie.Metrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shot_num_.MergeFrom(from.shot_num_);
  shot_time_.MergeFrom(from.shot_time_);
  shot_time_seconds_.MergeFrom(from.shot_time_seconds_);
  shot_time_nanos_.MergeFrom(from.shot_time_nanos_);
  shot_time_alt_nanos_.MergeFrom(from.shot_time_alt_nanos_);
}

void Metrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dolphindaq.rosie.Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metrics::CopyFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dolphindaq.rosie.Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metrics::IsInitialized() const {
  return true;
}

void Metrics::Swap(Metrics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metrics::InternalSwap(Metrics* other) {
  using std::swap;
  shot_num_.InternalSwap(&other->shot_num_);
  CastToBase(&shot_time_)->InternalSwap(CastToBase(&other->shot_time_));
  shot_time_seconds_.InternalSwap(&other->shot_time_seconds_);
  shot_time_nanos_.InternalSwap(&other->shot_time_nanos_);
  shot_time_alt_nanos_.InternalSwap(&other->shot_time_alt_nanos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Metrics::GetMetadata() const {
  protobuf_rosie_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rosie_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rosie
}  // namespace dolphindaq
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dolphindaq::rosie::Settings* Arena::CreateMaybeMessage< ::dolphindaq::rosie::Settings >(Arena* arena) {
  return Arena::CreateInternal< ::dolphindaq::rosie::Settings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dolphindaq::rosie::Data* Arena::CreateMaybeMessage< ::dolphindaq::rosie::Data >(Arena* arena) {
  return Arena::CreateInternal< ::dolphindaq::rosie::Data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dolphindaq::rosie::Metrics* Arena::CreateMaybeMessage< ::dolphindaq::rosie::Metrics >(Arena* arena) {
  return Arena::CreateInternal< ::dolphindaq::rosie::Metrics >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
